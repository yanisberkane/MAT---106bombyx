#!/usr/bin/python3

##
## EPITECH PROJECT, 2021
## B-MAT-200-PAR-2-1-106bombyx-rayan.banni
## File description:
## 106bombyx
##

from ast import arg
import sys

def verif(arg):
    for i in range(1, len(arg)):
        try:
            float(arg[i])
        except ValueError:
            exit(84)
    return 0

def compute_synthetic_scheme_gens(argv):
    verif(argv)
    n = int(argv[1])
    u = n
    i0 = float(argv[2])
    i1 = float(argv[3])
    k = 100

    if (n < 0 or i0 > i1 or i0 < 0 or i1 < 0):
        exit(84)
    while (k <= 400):
        u = n
        for i in range (1, int(i1) + 1):
            if (i >= i0):
                print(f"{(k * 0.01):.2f} {u:.2f}")
            u = (k * 0.01) * u * (1000 - u) / 1000
        k = k + 1
    return 0

def compute_relative_gen_values(argv):
    verif(argv)
    n = int(argv[1])
    k = float(argv[2])
    u1 = n

    if (k < 1 or k > 4 or n < 0):
        exit(84)
    print(1, f"{n:.2f}")
    for i in range (2, 101):
        u = k * u1 * (1000 -  u1) / 1000
        print(i, f"{u:.2f}")
        u1 = u
    return 0

def main(argv):
    with open("help.txt", "r") as help_file:
        read = help_file.read()

    if (len(argv) == 2 and argv[1] == "-h"):
        print(read)
    elif (len(argv) < 3 or len(argv) > 4):
        exit(84)
    else:
        if (len(argv) == 3):
            compute_relative_gen_values(argv)
        if (len(argv) == 4):
            compute_synthetic_scheme_gens(argv)
    return 0

if __name__ == '__main__':
    exit(main(sys.argv))
